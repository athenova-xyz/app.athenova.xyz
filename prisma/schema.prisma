// Prisma schema
// Adjust datasource provider & url in .env

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // change to sqlite/mysql/sqlserver/mongodb if needed
  url      = env("DATABASE_URL")
}

// --------------------------------------------------
// User related enum & model
// Users authenticate via their walletAddress (unique)
// --------------------------------------------------

enum UserRole {
  CREATOR
  BACKER
  LEARNER
}

model User {
  id            String    @id @default(cuid())
  walletAddress String    @unique @db.VarChar(64) // store lowercase checksum-normalized address
  role          UserRole  @default(LEARNER)

  username      String?   @unique @db.Citext // optional handle (case-insensitive)
  displayName   String?
  email         String?   @unique @db.Citext
  avatarUrl     String?
  bio           String?

  lastLoginAt   DateTime?
  metadata      Json?

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relations
  documents     Document[]

  @@index([role])
  @@index([createdAt])
}

// --------------------------------------------------
// Document model (for rich text editor autosave/publish)
// - content: last committed JSON document (BlockNote JSON)
// - draft: optional in-progress autosave buffer (not yet committed)
// - plainText: denormalized text for search/snippets
// --------------------------------------------------

enum DocumentStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

model Document {
  id         String          @id @default(cuid())
  title      String?         @db.VarChar(256)
  slug       String?         @unique @db.VarChar(256)
  authorId   String?
  author     User?           @relation(fields: [authorId], references: [id], onDelete: SetNull)
  status     DocumentStatus  @default(DRAFT)
  version    Int             @default(1)

  content    Json            // committed content
  draft      Json?           // latest autosave (not yet committed)
  plainText  String?         @db.Text

  publishedAt DateTime?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  @@index([authorId])
  @@index([status])
  @@index([updatedAt])
  @@index([slug])
}
